package magServer;

import java.io.IOException;
import java.net.ServerSocket;
import java.net.InetSocketAddress;
import java.net.Socket;
import java.util.concurrent.locks.ReentrantLock;

public class WelcomeSocket implements Runnable {
	Controller 							cont;
	String 								host;
	int 								port;
	ServerSocket 						sock;
	InetSocketAddress 					addr;
	private final ReentrantLock			lock = new ReentrantLock();

	public void init(String newHost, int newPort, Controller newCont) throws IOException {
		this.cont = newCont;
		this.host = newHost;
		this.port = newPort;
		this.addr = new InetSocketAddress(host, port);
		this.sock = new ServerSocket();
		this.sock.bind(addr);
	}

	public void run() {
		System.out.println(this.getClass());
		try {
			System.out.println(cont.getMag().getLastTube());
			System.out.println("Listening for connections");
			Socket clientSocket = this.sock.accept();
			cont.getMag().getLastTube().acceptMortar(new Mortar());
			System.out.println("Welcome Socket Thread Here!");
			Thread.sleep(1000);
			cont.getMag().tubes.get(cont.getMag().getCapacity() - 1).mortar.mortarListener.acceptSocket(clientSocket);
			cont.getMag().tubes.get(cont.getMag().getCapacity() - 1).mortar.mortarListener.run();
			cont.rotateMagazine(1);
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

}

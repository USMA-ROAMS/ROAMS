package magServer;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.net.Socket;
import java.util.concurrent.locks.ReentrantLock;

class ChildSocket implements Runnable {
	Mortar 								mortar;
	Socket 								dSock;
	OutputStreamWriter 					os;
	BufferedReader 						is;
	private final ReentrantLock			lock = new ReentrantLock();
	private boolean 					stop;
  
	public void acceptSocket(Socket newSock) throws Exception {
	  this.dSock = newSock;
	  create();
  }
	
	public void setMortar(Mortar newMortar){
		this.mortar = newMortar;
	}
	
	public void create() throws Exception {
	  this.os = new OutputStreamWriter(dSock.getOutputStream(), "UTF-8"); //For sending:: Use .write to send data over os
	  this.is = new BufferedReader(new InputStreamReader(dSock.getInputStream())); //For receiving::
  }
  
	public void sendToSocket(String message){
		try {
			os.write(message);
		}
		catch (IOException e) {System.out.println("error");}
	}
  
  public void run(){
	while(!stop){
		System.out.println("Mortar here!");
		try {
			Thread.sleep(1000);
		} catch (InterruptedException e1) {
			// TODO Auto-generated catch block
			e1.printStackTrace();
		}
		
	    //String message = "";
	    String read = "";
	
	    try {
			while((read = is.readLine()) != null){
				
			    if(read == "closeme"){
			    	System.out.println("Client closed connection");
			    	this.stop = true;
			    }
			    else if(read == ""){
			    	System.out.println("Empty String??");
			    }
			    else{
				    System.out.println("Received Message!");
				    System.out.println("Sending to Mortar " + this.mortar.strID);
				    mortar.receiveData(read);
			    }
			}
		} catch (IOException e) {
			// TODO Auto-generated catch block
			System.out.println("Failed to read.");
			e.printStackTrace();
		}
	 }
  }
}


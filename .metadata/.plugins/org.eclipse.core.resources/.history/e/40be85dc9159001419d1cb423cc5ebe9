package magServer;

import java.io.IOException;
import java.net.ServerSocket;
import java.net.InetSocketAddress;
import java.net.Socket;
import java.util.concurrent.locks.ReentrantLock;

public class WelcomeSocket implements Runnable {
	Controller 							cont;
	String 								host;
	int 								port;
	ServerSocket 						sock;
	InetSocketAddress 					addr;
	private final ReentrantLock			lock = new ReentrantLock();
	private boolean 					stop;

	public void init(String newHost, int newPort, Controller newCont) throws IOException {
		this.cont = newCont;
		this.host = newHost;
		this.port = newPort;
		this.addr = new InetSocketAddress(host, port);
		this.sock = new ServerSocket();
		this.sock.bind(addr);
	}

	public void run() {
		try {
			while (!stop){
				System.out.println("Welcome Socket Thread Here!");
				Thread.sleep(1000);
				
				System.out.println("Listening for connections");
				Socket clientSocket = this.sock.accept();
				System.out.println("Mortar Connecting... Initializing it.");
				Mortar newMortar = new Mortar();
				newMortar.init(this.cont, clientSocket);
				cont.getMag().getLastTube().acceptMortar(newMortar);
				cont.getMag().getLastTube().mortar.mortarListener.setMortar(newMortar);
				new Thread(cont.getMag().getLastTube().mortar.mortarListener).start();
				cont.rotateMagazine(1);
			}
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

}
